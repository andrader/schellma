[project]
name = "schellma"
version = "0.1.0"
description = "Clean, simplified schemas from Pydantic models for LLM prompts - less verbose than JSON Schema"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Rubens", email = "38709237+andrader@users.noreply.github.com" },
]
maintainers = [
    { name = "Rubens", email = "38709237+andrader@users.noreply.github.com" },
]
requires-python = ">=3.11"
dependencies = ["pydantic>=2.11.7"]
keywords = [
    "pydantic",
    "llm",
    "schema",
    "prompts",
    "ai",
    "language-models",
    "clean-schema",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
]

[project.urls]
Homepage = "https://github.com/andrader/schellma"
Documentation = "https://andrader.github.io/schellma/"
Repository = "https://github.com/andrader/schellma.git"
Issues = "https://github.com/andrader/schellma/issues"
Changelog = "https://github.com/andrader/schellma/releases"

[project.scripts]
schellma = "schellma:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/schellma"]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "ruff>=0.12.10",
    "mypy>=1.17.1",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.18",
    "mkdocs-api-autonav>=0.3.1",
    "mkdocstrings[python]>=0.30.0",
    "mkdocs-awesome-nav>=3.1.2",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by formatter
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["--strict-markers", "--strict-config", "--verbose"]
